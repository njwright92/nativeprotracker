{"version":3,"sources":["assets/img/block.jpg","assets/img/exChart.png","assets/img/exlist.png","components/SplashScreen.js","screens/AboutScreen.js","screens/HomeScreen.js","screens/LoginScreen.js","firebaseConfig.js","actions/editEntry.js","actions/types.js","components/EditEntryForm.js","actions/getEntry.js","screens/ItemDetailScreen.js","actions/deleteEntry.js","actions/addEntry.js","actions/AddItem.js","components/AddItemForm.js","actions/DeleteItem.js","actions/UpdateItem.js","components/UpdateItemForm.js","actions/getItems.js","components/ItemsList.js","screens/AddItemScreen.js","screens/LineChartScreen.js","screens/MainComponent.js","reducers/items.js","reducers/index.js","store.js","App.js","node_modules/moment/locale sync /^/.//.*$","assets/img/chart.png"],"names":["module","exports","styles","StyleSheet","create","viewStyles","flex","alignItems","justifyContent","backgroundColor","textStyles","color","fontSize","fontWeight","imageStyles","width","height","SplashScreen","View","style","Image","source","require","Text","container","paddingHorizontal","paddingVertical","heading","marginBottom","textAlign","aboutSection","borderColor","borderWidth","padding","aboutText","lineHeight","contactSection","borderTopWidth","borderTopColor","paddingTop","contactText","AboutScreen","marginVertical","title","buttonStyle","margin","icon","name","type","iconStyle","marginRight","onPress","MailComposer","recipients","subject","body","text","card","borderRadius","cardTitle","cardDescription","buttonContainer","HomeScreen","navigation","ScrollView","Pressable","navigate","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textTransform","LoginTab","useState","email","setEmail","password","setPassword","auth","getAuth","useEffect","onAuthStateChanged","user","placeholder","leftIcon","Ionicons","size","onChangeText","value","containerStyle","formInput","leftIconContainerStyle","formIcon","secureTextEntry","signInWithEmailAndPassword","then","userCredential","console","log","logEvent","catch","error","errorCode","code","errorMessage","message","setError","sendPasswordResetEmail","alert","titleStyle","flexDirection","RegisterTab","test","createUserWithEmailAndPassword","handleRegister","Tab","createBottomTabNavigator","LoginScreen","Navigator","tabBarOptions","activeBackgroundColor","inactiveBackgroundColor","activeTintColor","inactiveTintColor","labelStyle","Screen","component","options","tabBarIcon","props","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementiD","db","getFirestore","getAnalytics","localCache","persistentLocalCache","cacheSizeBytes","CACHE_SIZE_UNLIMITED","setPersistence","browserLocalPersistence","editEntry","itemId","entryId","quantity","dispatch","currentUser","entryRef","doc","collection","entryDoc","getDoc","setDoc","data","updatedEntryDoc","payload","uid","onSnapshot","updatedEntry","id","inputContainer","label","input","errorText","EditEntryForm","entry","onCancel","useDispatch","setQuantity","TextInput","keyboardType","trim","length","Button","getAllEntriesByCurrentUser","onEntriesUpdate","entriesQuery","query","collectionGroup","where","orderBy","snapshot","updatedEntries","docs","map","date","toDate","listContainer","marginTop","entriesContainer","flexGrow","entryContainer","entryText","marginHorizontal","fontStyle","deleteContainer","deleteButton","deleteText","updateButton","updateText","updateContainer","alignSelf","overflow","imageContainer","position","top","left","right","bottom","image","resizeMode","textContainer","ItemDetailScreen","route","item","useNavigation","itemParam","params","useSelector","state","items","find","entries","setEntries","showDatePicker","setShowDatePicker","Date","setDate","moment","format","buttonTitle","setButtonTitle","editingEntryId","setEditingEntryId","handleDeleteEntry","deleteDoc","deleteEntry","handleUpdateEntry","newQuantity","renderEntry","formattedDate","onSubmit","renderRightActions","progress","dragX","TouchableOpacity","renderLeftActions","interpolate","inputRange","outputRange","pressed","goBack","borderBottomWidth","borderBottomColor","mode","display","onChange","event","selectedDate","currentDate","Platform","OS","newEntry","docRef","addDoc","docSnap","exists","docChanges","forEach","change","newEntryData","addEntry","disabled","FlatList","keyExtractor","renderItem","extraData","ListEmptyComponent","contentContainerStyle","addItem","newItem","timestamp","serverTimestamp","newItemData","textInputContainer","textInputTitle","textInput","AddItemForm","validationSchema","Yup","shape","required","values","resetForm","cast","initialValues","handleChange","handleBlur","handleSubmit","errors","touched","onBlur","accessibilityLabel","deleteItem","Error","itemRef","entryQuery","getDocs","ref","updateItem","updateDoc","updatedItem","UpdateItemForm","listItems","setName","getAllItemsByCurrentUser","itemsRef","q","querySnapshot","push","sort","a","b","localeCompare","minHeight","itemName","button","marginLeft","buttonText","emptyList","ItemsList","editingItemId","setEditingItemId","setItems","fetchItems","unsubscribe","handleUpdateItem","updatedItems","handleDeleteItem","useMemo","formContainer","AddItemScreen","shouldShowForm","setShouldShowForm","onAddItem","onUpdateItem","onDeleteItem","scroll","scrollContent","LineChartScreen","weeklyEntries","setWeeklyEntries","monthlyEntries","setMonthlyEntries","yearlyEntries","setYearlyEntries","loading","setLoading","weekly","slice","monthly","yearly","fetchEntries","Array","isArray","weeklyData","labels","reverse","datasets","Number","strokeWidth","monthlyData","yearlyData","contentContainerstyle","ScreenWidth","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","yAxisLabel","xAxisLabel","bezier","withInnerLines","withOuterLines","fromZero","contentInset","withVerticalLabels","withHorizontalLabels","screenOptions","headerTintColor","headerStyle","headerTitleAlign","headerTitleStyle","headerRight","headerLeft","signOut","AddItemNavigator","Stack","createStackNavigator","headerShown","headerTitle","getFocusedRouteNameFromRoute","HomeNavigator","AboutNavigator","initialRouteName","Main","initialState","itemsReducer","action","filter","deleteItemId","editItemId","editEntryId","editQuantity","editItem","rootReducer","combineReducers","middleware","thunk","withExtraArgument","store","createStore","applyMiddleware","stack","App","isLoading","setIsLoading","setTimeout","NavigationContainer","fallback","ActivityIndicator","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","keys","Object","resolve"],"mappings":"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","file":"static/js/app.6dd71160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/block.599e43ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/exChart.faaa8dd7.png\";","module.exports = __webpack_public_path__ + \"static/media/exlist.b6716307.png\";","import React from 'react';\nimport { View, Text, StyleSheet, Image } from 'react-native';\n\nconst SplashScreen = () => {\n\n    return (\n        <View style={styles.viewStyles}>\n            <Image source={require('../assets/img/block.jpg')} style={styles.imageStyles} />\n            <Text style={styles.textStyles}>\n                Welcome to ProTracker\n            </Text>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    viewStyles: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'darkslategray'\n    },\n    textStyles: {\n        color: 'white',\n        fontSize: 40,\n        fontWeight: 'bold'\n    },\n    imageStyles: {\n        width: 300,\n        height: 300\n    }\n});\n\nexport default SplashScreen;\n","import { StyleSheet, View, Text } from \"react-native\";\nimport { Button, Icon } from 'react-native-elements';\nimport * as MailComposer from 'expo-mail-composer';\n\nconst AboutScreen = () => {\n\n    const sendMail = () => {\n        MailComposer.composeAsync({\n            recipients: ['njwright92@gmail.com'],\n            subject: 'Inquiry',\n            body: 'To whom it may concern:'\n        });\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.aboutSection}>\n                <Text style={styles.heading}>About</Text>\n                <Text style={styles.aboutText}>My production tracking system allows you to easily manage products on a dynamic list. Add entries for date and quantity for each product individually. Also you can view the production over time on weekly, monthly and yearly line charts.</Text>\n            </View>\n            <View style={styles.contactSection}>\n                <Text style={styles.heading}>Support/Contact Me\n                </Text>\n                <Text style={styles.contactText}>If you have any issues with the site, or if you have any questions or suggestions, feel free to contact me via email\n                </Text>\n                <View style={{ width: '100%', alignItems: 'center', marginVertical: 10 }}>\n                    <Button\n                        title='Send Email'\n                        buttonStyle={{\n                            backgroundColor: 'rgba(0, 0, 255, 0.5)',\n                            margin: 10,\n                            borderWidth: 0.5,\n                            borderColor: 'black'\n                        }}\n                        icon={\n                            <Icon\n                                name='envelope-o'\n                                type='font-awesome'\n                                color='#fff'\n                                iconStyle={{ marginRight: 7 }}\n                            />\n                        }\n                        onPress={() => sendMail()}\n                    />\n                </View>\n\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#778899',\n        paddingHorizontal: 20,\n        paddingVertical: 30,\n    },\n    heading: {\n        fontSize: 29,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        textAlign: 'center'\n    },\n    aboutSection: {\n        backgroundColor: '#D3D3D3',\n        borderColor: 'black',\n        borderWidth: 1,\n        marginBottom: 30,\n        padding: 10\n    },\n    aboutText: {\n        fontSize: 16,\n        lineHeight: 24,\n        color: 'black',\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    contactSection: {\n        borderTopWidth: 1,\n        borderTopColor: 'black',\n        paddingTop: 30,\n        backgroundColor: '#F5DEB3',\n        borderColor: 'black',\n        borderWidth: 2,\n    },\n    contactText: {\n        fontSize: 16,\n        lineHeight: 24,\n        color: 'black',\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n});\n\nexport default AboutScreen\n","import React from 'react';\nimport { StyleSheet, Text, Pressable, ScrollView, View } from 'react-native';\nimport AboutScreen from './AboutScreen';\n\nconst HomeScreen = ({ navigation }) => {\n\n    return (\n        <ScrollView style={styles.container}>\n            <Text style={styles.text}>\n                Production Tracking\n            </Text>\n            <Pressable style={styles.card}\n                onPress={() => navigation.navigate('AddItemStack')}>\n                <Pressable\n                    onPress={() => navigation.navigate('AddItemStack')}\n                    style={[\n                        styles.buttonContainer,\n                        {\n                            backgroundColor: '#2196F3',\n                            shadowColor: '#000',\n                            shadowOffset: {\n                                width: 0,\n                                height: 4,\n                            },\n                            shadowOpacity: 0.3,\n                            shadowRadius: 4,\n                            elevation: 8,\n                        },\n                    ]}\n                >\n                    <Text\n                        style={{\n                            color: '#FFFFFF',\n                            fontWeight: 'bold',\n                            textAlign: 'center',\n                            fontSize: 22,\n                            textTransform: 'uppercase',\n                            color: 'black'\n                        }}\n                    >\n                        Products\n                    </Text>\n                </Pressable>\n\n                <Text style={styles.cardDescription}>\n                    Click to view products page, manage all your products with ease swipe left to delete right to edit.\n                </Text>\n            </Pressable>\n            <View>\n                <AboutScreen />\n            </View>\n        </ScrollView>\n    )\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#778899',\n        paddingHorizontal: 20,\n        paddingTop: 30\n    },\n    text: {\n        textAlign: 'center',\n        color: 'black',\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginBottom: 20\n    },\n    card: {\n        backgroundColor: '#FFFFF0',\n        borderRadius: 10,\n        padding: 20,\n        marginBottom: 15\n    },\n    cardTitle: {\n        textAlign: 'center',\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 10\n    },\n    cardDescription: {\n        fontSize: 18,\n        color: '#333333',\n        padding: 4,\n        textAlign: 'center'\n    },\n    buttonContainer: {\n        borderRadius: 4,\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderWidth: 2,\n        borderColor: 'black',\n    },\n});\n\nexport default HomeScreen;\n","import { useState, useEffect } from 'react';\nimport { View, StyleSheet, Image, Text, ScrollView } from 'react-native';\nimport { Input, Button } from 'react-native-elements';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport {\n    getAuth,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    sendPasswordResetEmail,\n    onAuthStateChanged\n}\n    from \"firebase/auth\";\nimport { logEvent } from '@firebase/analytics';\n\nconst LoginTab = ({ navigation }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const auth = getAuth();\n\n    const handleLogin = () => {\n        if (!email || !password) {\n            setError('Please enter a valid email and password');\n            return;\n        }\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                const user = userCredential.user;\n                console.log(user);\n                logEvent;\n                navigation.navigate('Main');\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                setError(errorMessage);\n                console.log(errorCode, errorMessage);\n            });\n\n    };\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                navigation.navigate('Main');\n            }\n        });\n\n        return unsubscribe;\n    }, []);\n\n    const handleResetPassword = () => {\n        sendPasswordResetEmail(auth, email)\n            .then(() => {\n                alert('Password reset email sent. Please check your inbox.');\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.log(errorCode, errorMessage);\n                alert(errorMessage);\n            });\n    };\n\n    return (\n        <View style={styles.container}>\n            <Input\n                placeholder=\"Email\"\n                leftIcon={\n                    <Ionicons\n                        name=\"mail\"\n                        size={24}\n                        color=\"black\"\n                        style={styles.icon}\n                    />\n                }\n                onChangeText={(text) => setEmail(text)}\n                value={email}\n                containerStyle={styles.formInput}\n                leftIconContainerStyle={styles.formIcon}\n            />\n            <Input\n                placeholder=\"Password\"\n                leftIcon={\n                    <Ionicons\n                        name=\"key\"\n                        size={24}\n                        color=\"black\"\n                        style={styles.icon}\n                    />\n                }\n                onChangeText={(text) => setPassword(text)}\n                value={password}\n                secureTextEntry={true}\n                containerStyle={styles.formInput}\n                leftIconContainerStyle={styles.formIcon}\n            />\n            <View>\n                <Button\n                    onPress={() => handleLogin()}\n                    title=\"Login\"\n                    icon={\n                        <Ionicons\n                            name=\"log-in-outline\"\n                            size={24}\n                            color=\"white\"\n                            style={styles.icon}\n                        />\n                    }\n                    buttonStyle={{ backgroundColor: '#5637DD' }}\n                />\n            </View>\n            <View>\n                <Button\n                    onPress={() => handleResetPassword()}\n                    title=\"Reset Password\"\n                    type=\"clear\"\n                    icon={\n                        <Ionicons\n                            name=\"lock-closed-outline\"\n                            size={24}\n                            color=\"red\"\n                            style={styles.icon}\n                        />\n                    }\n                    titleStyle={{ color: 'red' }}\n                />\n            </View>\n            <View>\n                <Button\n                    onPress={() => navigation.navigate('Register')}\n                    title=\"Register\"\n                    type=\"clear\"\n                    icon={\n                        <Ionicons\n                            name=\"person-add-outline\"\n                            size={24}\n                            color=\"black\"\n                            style={styles.icon}\n                        />\n                    }\n                    titleStyle={{ color: 'green', fontWeight: 'bold' }}\n                />\n            </View>\n\n            <View style={{ justifyContent: 'space-between' }}>\n                <Text style={{ margin: 10, fontWeight: 'bold' }}>Here are a couple examples of what you can do with this app after you register:</Text>\n                <View style={{ flexDirection: 'row', alignItems: 'center', marginRight: 10 }}>\n                    <Image\n                        source={require('../assets/img/exChart.png')}\n                        style={{ width: 150, height: 150, margin: 10 }}\n                    />\n                    <Text style={{ margin: 10, fontWeight: 'bold' }}>Example Line Chart</Text>\n                </View>\n                <View style={{ flexDirection: 'row', alignItems: 'center', marginRight: 10 }}>\n                    <Image\n                        source={require('../assets/img/exlist.png')}\n                        style={{ width: 270, height: 100, margin: 10 }}\n                    />\n                    <Text style={{ margin: 10, fontWeight: 'bold' }}>Example Dynamic List</Text>\n                </View>\n            </View>\n\n        </View>\n\n    );\n};\n\nconst RegisterTab = ({ navigation }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const auth = getAuth();\n\n    const handleRegister = () => {\n        if (!/^\\S+@\\S+\\.\\S+$/.test(email)) {\n            alert('Please enter a valid email address');\n            return;\n        } const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{7,}$/;\n\n        if (!passwordRegex.test(password)) {\n            alert('Password must be at least 7 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character (@$!%*?&)');\n            return;\n        }\n\n\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                const user = userCredential.user;\n                console.log(user);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.log(errorCode, errorMessage);\n                if (errorCode === 'auth/email-already-in-use') {\n                    alert('Email address is already in use');\n                } else {\n                    console.log(errorCode, errorMessage);\n                }\n            });\n        logEvent;\n        navigation.navigate('Main');\n    };\n\n    return (\n        <ScrollView>\n            <View style={styles.container}>\n                <Input\n                    placeholder='Email'\n                    leftIcon={<Ionicons name='mail'\n                        size={24}\n                        color='black' />}\n                    onChangeText={(text) => setEmail(text)}\n                    value={email}\n                    containerStyle={styles.formInput}\n                    leftIconContainerStyle={styles.formIcon}\n                />\n                <Input\n                    placeholder='Password'\n                    leftIcon={<Ionicons name='key'\n                        size={24}\n                        color='black' />}\n                    onChangeText={(text) => setPassword(text)}\n                    value={password}\n                    secureTextEntry={true}\n                    containerStyle={styles.formInput}\n                    leftIconContainerStyle={styles.formIcon}\n                />\n                <View>\n                    <Button\n                        onPress={() => handleRegister()}\n                        title='Register'\n                        color='#5637DD'\n                        icon={\n                            <Ionicons\n                                name='person-add-outline'\n                                color='#fff'\n                                size={24}\n                            />\n                        }\n                        buttonStyle={{ backgroundColor: '#5637DD' }}\n                    />\n                </View>\n            </View>\n\n            <View style={{ justifyContent: 'space-between' }}>\n                <Text style={{ margin: 10, fontWeight: 'bold' }}>Here are a couple examples of what you can do with this app after you register:</Text>\n                <View style={{ flexDirection: 'row', alignItems: 'center', marginRight: 10 }}>\n                    <Image\n                        source={require('../assets/img/exChart.png')}\n                        style={{ width: 150, height: 150, margin: 10 }}\n                    />\n                    <Text style={{ margin: 10, fontWeight: 'bold' }}>Example Line Chart</Text>\n                </View>\n                <View style={{ flexDirection: 'row', alignItems: 'center', marginRight: 10 }}>\n                    <Image\n                        source={require('../assets/img/exlist.png')}\n                        style={{ width: 270, height: 100, margin: 10 }}\n                    />\n                    <Text style={{ margin: 10, fontWeight: 'bold' }}>Example Dynamic List</Text>\n                </View>\n            </View>\n\n        </ScrollView>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst LoginScreen = () => {\n    const tabBarOptions = {\n        activeBackgroundColor: 'darkslategray',\n        inactiveBackgroundColor: 'lightslategray',\n        activeTintColor: '#fff',\n        inactiveTintColor: '#fff',\n        labelStyle: { fontSize: 16 },\n    };\n\n    return (\n        <Tab.Navigator tabBarOptions={tabBarOptions}>\n            <Tab.Screen\n                name='Login'\n                component={LoginTab}\n                options={{\n                    tabBarIcon: (props) => {\n                        return (\n                            <Ionicons\n                                name='log-in-outline'\n                                size={26}\n                                color={props.color}\n                            />\n                        );\n                    }\n                }}\n            />\n            <Tab.Screen\n                name='Register'\n                component={RegisterTab}\n                options={{\n                    tabBarIcon: (props) => {\n                        return (\n                            <Ionicons\n                                name='person-add-outline'\n                                size={26}\n                                color={props.color}\n                            />\n                        );\n                    }\n                }}\n            />\n        </Tab.Navigator>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        margin: 10,\n    },\n\n});\n\nexport default LoginScreen;","import { initializeApp } from 'firebase/app';\nimport { getFirestore, CACHE_SIZE_UNLIMITED, persistentLocalCache } from 'firebase/firestore';\nimport { getAuth, setPersistence, browserLocalPersistence } from \"firebase/auth\";\nimport { getAnalytics } from 'firebase/analytics';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDjvLOECBzTAoouH0DyFTt-WTu8GFLU5Bg\",\n    authDomain: \"nativetracker-382720.firebaseapp.com\",\n    projectId: \"nativetracker-382720\",\n    storageBucket: \"nativetracker-382720.appspot.com\",\n    messagingSenderId: \"366870860977\",\n    appId: \"1:366870860977:web:c03bed3b9e430b2e57fe90\",\n    measurementiD: \"G-SEL3JH333D\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst analytics = getAnalytics(app);\n\ngetFirestore(app,\n    { localCache: persistentLocalCache(/*settings*/{}) });\n\nconst firestoreDb = getFirestore(app, {\n    cacheSizeBytes: CACHE_SIZE_UNLIMITED\n});\n\nsetPersistence(auth, browserLocalPersistence);\n\nexport { app, db, auth, firestoreDb, analytics };\n","import { EDIT_ENTRY } from './types';\nimport { setDoc, doc, getDoc, collection, onSnapshot } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from 'firebase/auth';\n\nexport const editEntry = (itemId, entryId, quantity) => {\n    return async (dispatch) => {\n        const auth = getAuth();\n        const user = auth.currentUser;\n        try {\n            const entryRef = doc(\n                collection(db, \"items\", itemId, \"entries\"),\n                entryId\n            );\n            const entryDoc = await getDoc(entryRef);\n            console.log(entryDoc, entryRef);\n\n            await setDoc(entryRef, {\n                ...entryDoc.data(),\n                quantity: quantity.quantity || []\n            });\n\n            const updatedEntryDoc = await getDoc(entryRef);\n            console.log(updatedEntryDoc);\n\n            dispatch({\n                type: EDIT_ENTRY,\n                payload: {\n                    itemId,\n                    entryId,\n                    quantity,\n                    uid: user.uid\n                },\n            });\n\n            onSnapshot(entryRef, (doc) => {\n                const updatedEntry = { ...doc.data(), id: doc.id };\n                console.log('editEntry snapshot', updatedEntry);\n            });\n        } catch (error) {\n            console.error('Error updating document: ', error);\n            if (error.code === \"not-found\") {\n                console.log(\"Document not found\");\n            }\n        }\n    };\n};\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ADD_ENTRY = 'ADD_ENTRY';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const EDIT_ENTRY = 'EDIT_ENTRY';","import React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { editEntry } from '../actions/editEntry';\n\nconst EditEntryForm = ({ entry, onCancel }) => {\n    const dispatch = useDispatch();\n    const [quantity, setQuantity] = useState(entry ? entry.quantity : '');\n\n    const handleUpdateEntry = () => {\n        console.log('Entry object:', entry);\n        console.log('Updating entry...', entry.itemId, entry.id, quantity);\n        if (entry) {\n            dispatch(editEntry(entry.itemId, entry.id, { quantity: quantity }));\n        }\n        onCancel();\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Edit Entry</Text>\n            <View style={styles.inputContainer}>\n                <Text style={styles.label}>Quantity:</Text>\n                <TextInput\n                    style={styles.input}\n                    value={quantity}\n                    onChangeText={(text) => setQuantity(text)}\n                    keyboardType=\"numeric\"\n                />\n                {quantity.trim().length === 0 && (\n                    <Text style={styles.errorText}>Quantity is required</Text>\n                )}\n            </View>\n            <View style={styles.buttonContainer}>\n                <Button\n                    color=\"#556B2F\"\n                    title=\"Submit\"\n                    onPress={handleUpdateEntry}\n                />\n                <Button\n                    color=\"maroon\"\n                    title=\"Cancel\"\n                    onPress={onCancel}\n                />\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderColor: 'blue',\n        borderWidth: 2,\n        padding: 20,\n        borderRadius: 10,\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    inputContainer: {\n        marginBottom: 10,\n    },\n    label: {\n        fontWeight: 'bold',\n        marginBottom: 5,\n    },\n    input: {\n        height: 40,\n        borderColor: 'black',\n        borderWidth: 1,\n        borderRadius: 5,\n        padding: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    errorText: {\n        color: 'red',\n        marginBottom: 5,\n    },\n});\n\nexport default EditEntryForm;\n","import { collectionGroup, query, where, orderBy, onSnapshot } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from 'firebase/auth';\n\nexport const getAllEntriesByCurrentUser = async (itemId, onEntriesUpdate) => {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n        return [];\n    }\n\n    // Query the entries collection group\n    const entriesQuery = query(\n        collectionGroup(db, 'entries'),\n        where('uid', '==', currentUser.uid),\n        where('itemId', '==', itemId),\n        orderBy('date', 'desc')\n    );\n\n    // Set up the onSnapshot listener for realtime updates\n    const unsubscribe = onSnapshot(entriesQuery, (snapshot) => {\n        const updatedEntries = snapshot.docs.map((doc) => {\n            const data = doc.data();\n            // Convert timestamp to JS date object\n            data.date = data.date.toDate();\n            return { id: doc.id, ...data };\n        });\n\n        // Call the callback function with the updated entries\n        onEntriesUpdate(updatedEntries);\n    }, (error) => {\n        console.log('Error getting entries collection updates: ', error);\n    });\n\n    // Return the unsubscribe function to clean up the listener when needed\n    return unsubscribe;\n};\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, FlatList, TouchableOpacity, ScrollView, Image } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEntry } from '../actions/addEntry';\nimport { deleteEntry } from '../actions/deleteEntry';\nimport { editEntry } from '../actions/editEntry';\nimport EditEntryForm from '../components/EditEntryForm';\nimport moment from 'moment';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Swipeable } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getAllEntriesByCurrentUser } from '../actions/getEntry';\nimport { logEvent } from '@firebase/analytics';\n\nconst ItemDetailScreen = ({ route }) => {\n    logEvent;\n    console.log('item: ', item);\n    const navigation = useNavigation();\n    const { item: itemParam } = route.params;\n    const dispatch = useDispatch();\n    const items = useSelector((state) => state.items);\n    const item = items.find((item) => item.id === itemParam.id); //Updated to match the item by ID\n    const [entries, setEntries] = useState([]);\n    const [showDatePicker, setShowDatePicker] = useState(false);\n    const [date, setDate] = useState(new Date());\n    const [quantity, setQuantity] = useState('');\n    const [buttonTitle, setButtonTitle] = useState(moment(date).format('MM/DD/YYYY'));\n    const [editingEntryId, setEditingEntryId] = useState(null);\n\n    useEffect(() => {\n        const handleEntriesUpdate = (updatedEntries) => {\n            setEntries(updatedEntries);\n        };\n\n        const unsubscribe = getAllEntriesByCurrentUser(itemParam.id, handleEntriesUpdate);\n\n        return () => {\n            unsubscribe; // Clean up the listener when the component unmounts\n        };\n    }, [itemParam.id]);\n\n\n    const handleQuantityChange = (text) => {\n        setQuantity(text);\n    };\n\n    const handleDateChange = (event, selectedDate) => {\n        const currentDate = selectedDate || date;\n        setShowDatePicker(Platform.OS === 'ios');\n        setDate(currentDate);\n        const formattedDate = moment(selectedDate).format('MM/DD/YYYY');\n        setButtonTitle(formattedDate);\n        console.log('on Date Change', currentDate, event, date);\n    };\n\n    const handleAddEntry = () => {\n        dispatch(addEntry(itemParam.id, quantity, date));\n        setQuantity('');\n    };\n\n    const handleDeleteEntry = (entryId) => {\n        dispatch(deleteEntry(itemParam.id, entryId));\n    };\n\n    const handleUpdateEntry = (entryId, newQuantity) => {\n        dispatch(editEntry(item.id, entryId, { quantity: newQuantity }));\n        setEditingEntryId(null);\n    };\n\n    const renderEntry = ({ item: entry }) => {\n        const { date, quantity } = entry;\n        console.log(`Type of date: ${typeof date}, value: ${date}`);\n        let formattedDate = '';\n\n        if (date && typeof date.toDate === 'function') { // Firestore Timestamp\n            formattedDate = moment(date.toDate()).format('MM/DD/YYYY');\n        } else if (date instanceof Date) { // JavaScript Date object\n            formattedDate = moment(date).format('MM/DD/YYYY');\n        } else if (typeof date === 'string') { // Date as a string\n            formattedDate = date;\n        } else {\n            formattedDate = 'N/A'; // Default value if date is not defined or not recognized\n        }\n\n        const renderRightActions = (progress, dragX) => {\n            return (\n                <View style={styles.deleteContainer}>\n                    <TouchableOpacity\n                        onPress={() => handleDeleteEntry(entry.id)}\n                        style={styles.deleteButton}\n                    >\n                        <Text style={styles.deleteText}>Delete</Text>\n                    </TouchableOpacity>\n                </View>\n            );\n        };\n\n        const renderLeftActions = (progress, dragX) => {\n            const trans = dragX.interpolate({\n                inputRange: [-100, 0],\n                outputRange: [1, 0],\n            });\n\n            const onPressEdit = () => {\n                setEditingEntryId(entry.id);\n            };\n\n            return (\n                <View style={styles.updateContainer}>\n                    <TouchableOpacity style={styles.updateButton} onPress={onPressEdit}>\n                        <Text style={styles.updateText}>Edit</Text>\n                    </TouchableOpacity>\n                </View>\n            );\n        };\n\n        if (editingEntryId && entry && entry.id === editingEntryId) {\n            return (\n                <EditEntryForm\n                    entry={entry}\n                    item={item}\n                    quantity={quantity}\n                    onSubmit={handleUpdateEntry}\n                    onCancel={() => setEditingEntryId(null)}\n                />\n            );\n        }\n\n        return (\n            <Swipeable renderRightActions={renderRightActions} renderLeftActions={renderLeftActions}>\n                <View style={styles.entryContainer}>\n                    <Text style={styles.entryText}>{quantity}</Text>\n                    <Text style={styles.entryText}>{formattedDate}</Text>\n                </View>\n            </Swipeable>\n        );\n    };\n\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity\n                style={({ pressed }) => [{ backgroundColor: pressed ? '#fff' : 'transparent', borderRadius: 20, padding: 16, width: '85%', marginTop: 10, alignSelf: 'flex-start' }]}\n                onPress={() => navigation.goBack()}\n            >\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    <Ionicons name=\"chevron-back\" size={24} color='#fff' />\n                    <Text style={{ color: '#fff', fontWeight: 'bold', fontSize: 18 }}>\n                        Back\n                    </Text>\n                </View>\n            </TouchableOpacity>\n            <ScrollView style={styles.inputContainer}>\n                <Text style={styles.title}>{itemParam.name}\n                </Text>\n                <Text style={{\n                    fontStyle: 'italic',\n                    borderBottomWidth: 2,\n                    borderBottomColor: 'black'\n                }}>ID: {itemParam.id}\n                </Text>\n                <TextInput\n                    style={styles.input}\n                    onChangeText={handleQuantityChange}\n                    value={quantity}\n                    placeholder=\"Quantity\"\n                    keyboardType=\"numeric\"\n                />\n                <TouchableOpacity\n                    style={{\n                        backgroundColor: '#5637DD',\n                        borderRadius: 10,\n                        padding: 10,\n                        alignSelf: 'center',\n                        width: '80%'\n                    }}\n                    onPress={() => setShowDatePicker(true)}\n                >\n                    <Text style={{ fontWeight: 'bold', color: 'white', textAlign: 'center', fontSize: 18 }}>{buttonTitle\n                    }</Text>\n                </TouchableOpacity>\n                {showDatePicker && (\n                    <DateTimePicker\n                        value={date}\n                        mode=\"date\"\n                        display=\"default\"\n                        onChange={handleDateChange}\n                    />\n                )}\n                <TouchableOpacity\n                    style={{\n                        backgroundColor: '#8BC34A',\n                        padding: 10,\n                        borderRadius: 5,\n                        marginVertical: 3,\n                    }}\n                    onPress={handleAddEntry}\n                    disabled={!quantity}\n                >\n                    <Text style={{ fontSize: 22, fontWeight: 'bold', color: 'white', textAlign: 'center' }}>Add Entry</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={styles.card}\n                    onPress={() => {\n                        navigation.navigate('LineChart', { itemId: itemParam.id, name: itemParam.name });\n                    }}\n                >\n                    <View style={styles.imageContainer}>\n                        <Image source={require('../assets/img/chart.png')} style={styles.image} />\n                    </View>\n                    <View style={styles.textContainer}>\n                        <Text style={styles.text}>Line Chart</Text>\n                    </View>\n                </TouchableOpacity>\n            </ScrollView>\n\n            <View style={styles.listContainer}>\n                <View style={{ borderBottomWidth: 2, borderBottomColor: 'black' }}>\n                    <Text style={{ fontSize: 28, fontWeight: 'bold', color: 'black', textAlign: 'center' }}>Product Entries\n                    </Text>\n                </View>\n\n                <Text style={{ fontSize: 20, fontWeight: 'bold', color: 'black', textAlign: 'center' }}>\n                    Quantity{'          '}&&{'          '}Date\n                </Text>\n                <FlatList\n                    data={entries}\n                    keyExtractor={(entry) => entry.id}\n                    renderItem={({ item }) => renderEntry({ item })}\n                    extraData={entries}\n                    ListEmptyComponent={<Text style={styles.entryText}>No Entries Found</Text>}\n                    contentContainerStyle={styles.entriesContainer}\n                />\n            </View>\n        </View>\n\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#778899',\n        alignItems: 'center'\n    },\n    inputContainer: {\n        flex: 1,\n        padding: 10,\n    },\n    listContainer: {\n        flex: 1,\n        padding: 16,\n        marginTop: 12,\n    },\n    title: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 16,\n    },\n    input: {\n        borderWidth: 2,\n        borderColor: 'black',\n        borderRadius: 4,\n        padding: 5,\n        marginVertical: 5,\n        width: '100%',\n        backgroundColor: '#fff',\n    },\n    entriesContainer: {\n        flexGrow: 1,\n    },\n    entryContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 5,\n        borderWidth: 2,\n        borderColor: 'black',\n        marginVertical: 5,\n        borderRadius: 4,\n        backgroundColor: '#F7F7F7',\n    },\n    entryText: {\n        marginTop: 1,\n        marginHorizontal: 20,\n        fontSize: 20,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontStyle: 'italic'\n    },\n    deleteContainer: {\n        backgroundColor: 'red',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 70,\n        height: '75%',\n    },\n    deleteButton: {\n        backgroundColor: 'red',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 70,\n        height: '75%',\n    },\n    deleteText: {\n        color: 'white',\n        fontSize: 17,\n        fontWeight: 'bold',\n    },\n    updateButton: {\n        backgroundColor: 'blue',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 70,\n        height: '75%',\n    },\n    updateText: {\n        color: 'white',\n        fontSize: 17,\n        fontWeight: 'bold',\n    },\n    updateContainer: {\n        backgroundColor: 'blue',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 70,\n        height: '75%',\n    },\n    card: {\n        marginTop: 24,\n        backgroundColor: 'black',\n        borderRadius: 10,\n        width: '90%',\n        alignSelf: 'center',\n        overflow: 'hidden',\n    },\n    imageContainer: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        resizeMode: 'cover',\n    },\n    textContainer: {\n        marginTop: 24,\n        paddingHorizontal: 20,\n        paddingVertical: 16,\n        backgroundColor: 'rgba(0,0,0,0.7)',\n    },\n    text: {\n        color: 'white',\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 22,\n    },\n});\n\n\n\nexport default ItemDetailScreen;","import { DELETE_ENTRY } from './types';\nimport { doc, deleteDoc, } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from 'firebase/auth';\n\nexport const deleteEntry = (itemId, entryId) => {\n    return async (dispatch) => {\n        const auth = getAuth();\n        const user = auth.currentUser;\n        try {\n\n            await deleteDoc(doc(db, \"items\", itemId, \"entries\", entryId));\n            dispatch({\n                type: DELETE_ENTRY,\n                payload: {\n                    entryId,\n                    itemId,\n                    uid: user.uid\n                },\n            });\n        } catch (error) {\n            console.error('Error deleting entry: ', error);\n        }\n    };\n};","import { ADD_ENTRY } from './types';\nimport { onSnapshot, addDoc, collection, getDoc } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from \"firebase/auth\";\n\nexport const addEntry = (itemId, quantity, date) => {\n    return async (dispatch) => {\n        const auth = getAuth();\n        const user = auth.currentUser;\n\n        const newEntry = {\n            itemId,\n            quantity,\n            date: date,\n            uid: user.uid\n        };\n\n        try {\n            const docRef = await addDoc(collection(db, \"items\", itemId, \"entries\"), newEntry);\n            console.log('addEntry', newEntry);\n\n            const docSnap = await getDoc(docRef);\n            if (docSnap.exists()) {\n                const entryData = { ...docSnap.data(), id: docRef.id };\n                dispatch({\n                    type: ADD_ENTRY,\n                    payload: entryData,\n                });\n\n                // listen for updates to the 'entries' collection of this item\n                onSnapshot(collection(db, \"items\", itemId, \"entries\"), (snapshot) => {\n                    snapshot.docChanges().forEach((change) => {\n                        if (change.type === \"added\") {\n                            const newEntryData = { ...change.doc.data(), id: change.doc.id };\n                            console.log('New entry added: ', newEntryData);\n                            // you can dispatch an action here if you want to update your app's state\n                        }\n                    });\n                }, (error) => {\n                    console.log('Error getting entries collection updates: ', error);\n                });\n            }\n        } catch (error) {\n            console.log('Error adding document: ', error);\n        }\n    };\n};\n","import { ADD_ITEM } from './types';\nimport { onSnapshot, addDoc, collection, getDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from \"firebase/auth\";\n\nexport const addItem = (item) => {\n    return async (dispatch) => {\n        const auth = getAuth();\n        const user = auth.currentUser;\n\n        const newItem = {\n            name: item.name,\n            uid: user.uid,\n            timestamp: serverTimestamp(),\n        };\n\n        try {\n            const docRef = await addDoc(collection(db, \"items\"), newItem);\n            console.log('addItem', newItem);\n\n            const docSnap = await getDoc(docRef);\n            if (docSnap.exists()) {\n                const itemData = { ...docSnap.data(), id: docRef.id };\n                dispatch({\n                    type: ADD_ITEM,\n                    payload: itemData,\n                });\n\n                // listen for updates to the 'items' collection\n                onSnapshot(collection(db, \"items\"), (snapshot) => {\n                    snapshot.docChanges().forEach((change) => {\n                        if (change.type === \"added\") {\n                            const newItemData = { ...change.doc.data(), id: change.doc.id };\n                            console.log('New item added: ', newItemData);\n                            // you can dispatch an action here if you want to update your app's state\n                        }\n                    });\n                }, (error) => {\n                    console.log('Error getting items collection updates: ', error);\n                });\n            }\n        } catch (error) {\n            console.log('Error adding document: ', error);\n        }\n    };\n};\n","import React from 'react';\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addItem } from '../actions/AddItem';\n\nconst AddItemForm = () => {\n    const dispatch = useDispatch();\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Name is required'),\n    });\n\n    const onSubmit = async (values, { resetForm }) => {\n        console.log('onSubmit', values, validationSchema.cast(values));\n\n        let item = validationSchema.cast(values);\n        console.log('addItem', item);\n        await dispatch(addItem(item));\n        resetForm();\n    };\n\n    const initialValues = {\n        name: '',\n    }\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={validationSchema}\n        >\n            {({\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                errors,\n                touched,\n            }) => (\n                <View style={styles.container}>\n                    <Text style={styles.textInputTitle}>Add Product</Text>\n                    <View style={styles.textInputContainer}>\n                        <TextInput\n                            style={styles.textInput}\n                            onChangeText={handleChange('name')}\n                            onBlur={handleBlur('name')}\n                            value={values.name}\n                            placeholder=\"Product name\"\n                        />\n                    </View>\n                    {errors.name && touched.name && <Text style={styles.errorText}>{errors.name}</Text>}\n\n                    <Button\n                        color='blue'\n                        onPress={handleSubmit}\n                        title=\"Submit\"\n                        accessibilityLabel='Tap me to submit an item'\n                    />\n                </View>\n            )}\n        </Formik>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center'\n    },\n    textInputContainer: {\n        borderWidth: 1,\n        borderRadius: 10,\n        borderColor: 'black',\n        marginBottom: 10,\n        marginTop: 10,\n        alignItems: 'center'\n    },\n    textInputTitle: {\n        color: 'black',\n        fontWeight: 'bold',\n        fontSize: 18,\n        marginVertical: 5\n    },\n    textInput: {\n        paddingHorizontal: 10,\n        paddingVertical: 5,\n        width: 300,\n    },\n    errorText: {\n        color: 'red'\n    }\n});\n\nexport default AddItemForm;\n","import { DELETE_ITEM } from './types';\nimport { deleteDoc, doc, onSnapshot, collectionGroup, query, where, getDocs } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from \"firebase/auth\";\n\nexport const deleteItem = (id) => {\n    return async (dispatch) => {\n        try {\n            const auth = getAuth();\n            const user = auth.currentUser;\n\n            if (user) {\n                const itemRef = doc(db, \"items\", id);\n                console.log(db, \"items\", id)\n\n                // Delete the item document\n                await deleteDoc(itemRef);\n\n                // Delete all entries associated with the item\n                const entryQuery = query(collectionGroup(db, \"entries\"), where(\"item_id\", \"==\", id));\n                const entryQuerySnapshot = await getDocs(entryQuery);\n                entryQuerySnapshot.forEach((entryDoc) => {\n                    deleteDoc(entryDoc.ref);\n                });\n\n                dispatch({\n                    type: DELETE_ITEM,\n                    payload: { id }\n                });\n\n                onSnapshot(doc(itemRef), () => {\n                    console.log('deleteItem snapshot');\n                });\n            } else {\n                throw new Error('User is not authenticated or does not have permission to delete the item.');\n            }\n        } catch (error) {\n            console.error('Error deleting document: ', error);\n        }\n    };\n};\n","import { UPDATE_ITEM } from './types';\nimport { updateDoc, doc, onSnapshot, getDoc } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\n\nexport const updateItem = (item) => {\n    return async (dispatch) => {\n        try {\n            const itemRef = doc(db, \"items\", item.id);\n            const docSnap = await getDoc(itemRef);\n            if (!docSnap.exists()) {\n                console.error('Item does not exist');\n                return;\n            }\n\n            await updateDoc(itemRef, {\n                name: item.name,\n            });\n\n            dispatch({\n                type: UPDATE_ITEM,\n                payload: {\n                    ...item,\n                },\n            });\n\n            onSnapshot(itemRef, (doc) => {\n                const updatedItem = doc.data();\n                dispatch({\n                    type: UPDATE_ITEM,\n                    payload: updatedItem,\n                });\n            });\n        } catch (error) {\n            console.error('Error updating document: ', error);\n        }\n    };\n};\n\n","import React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { updateItem } from '../actions/UpdateItem';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst UpdateItemForm = ({ itemId, listItems, onCancel }) => {\n    const dispatch = useDispatch();\n    const item = listItems ? listItems.find((item) => item.id === itemId) : null;\n    const [name, setName] = useState(item ? item.name : '');\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Name is required'),\n    });\n\n    const handleUpdateItem = () => {\n        if (item) {\n            dispatch(\n                updateItem({\n                    id: itemId,\n                    name: name,\n                }),\n            );\n        }\n        onCancel();\n    };\n\n    return (\n        <Formik\n            initialValues={{ name: item ? item.name : '' }}\n            validationSchema={validationSchema}\n            onSubmit={handleUpdateItem}\n        >\n            {({ handleBlur, handleSubmit, values, errors, touched }) => (\n                <View style={styles.container}>\n                    <Text style={styles.title}>Update Item</Text>\n                    <View style={styles.inputContainer}>\n                        <Text style={styles.label}>Name:</Text>\n                        <TextInput\n                            style={styles.input}\n                            value={name}\n                            onChangeText={(text) => setName(text)}\n                            onBlur={handleBlur('name')}\n                        />\n                        {touched.name && errors.name && (\n                            <Text style={styles.errorText}>{errors.name}</Text>\n                        )}\n                    </View>\n                    <View style={styles.buttonContainer}>\n                        <Button\n                            color='blue'\n                            title=\"submit\"\n                            onPress={handleSubmit}\n                        />\n                        <Button\n                            color='red'\n                            title=\"Cancel\"\n                            onPress={onCancel}\n                        />\n                    </View>\n                </View>\n            )}\n        </Formik>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderColor: 'blue',\n        borderWidth: 2,\n        padding: 20,\n        borderRadius: 10,\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    inputContainer: {\n        marginBottom: 10,\n    },\n    label: {\n        fontWeight: 'bold',\n        marginBottom: 5,\n    },\n    input: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        borderRadius: 5,\n        padding: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    errorText: {\n        color: 'red',\n        marginBottom: 5,\n    },\n});\n\nexport default UpdateItemForm;\n","import { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from 'firebase/auth';\n\nexport const getAllItemsByCurrentUser = async () => {\n    const currentUser = getAuth().currentUser;\n    const itemsRef = collection(db, 'items');\n    const q = query(itemsRef, where('uid', '==', currentUser.uid));\n    const querySnapshot = await getDocs(q);\n\n    const items = [];\n    querySnapshot.forEach((doc) => {\n        items.push({\n            id: doc.id,\n            ...doc.data(),\n        });\n    });\n\n    const sortedItems = items.sort((a, b) => a.name.localeCompare(b.name));\n\n    return sortedItems;\n};\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity, Pressable } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { deleteItem } from '../actions/DeleteItem'\nimport { updateItem } from '../actions/UpdateItem'\nimport UpdateItemForm from './UpdateItemForm';\nimport { Swipeable } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport { getAllItemsByCurrentUser } from '../actions/getItems';\nimport { onSnapshot, collection } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\n\n\nconst ItemsList = () => {\n  const dispatch = useDispatch();\n  const [editingItemId, setEditingItemId] = useState(null);\n  const navigation = useNavigation();\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const items = await getAllItemsByCurrentUser();\n      setItems(items);\n    };\n    fetchItems();\n\n    // subscribe to updates to the items collection\n    const unsubscribe = onSnapshot(collection(db, 'items'), () => {\n      fetchItems();\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleUpdateItem = (id, name, quantity) => {\n    const updatedItem = { id, name, quantity };\n    const updatedItems = items.map(item => item.id === id ? updatedItem : item);\n    dispatch(updateItem(updatedItems));\n    setEditingItemId(null);\n  };\n\n  const handleDeleteItem = (items) => {\n    dispatch(deleteItem(items));\n  };\n\n  const renderRightActions = (progress, dragX, item) => {\n    const trans = dragX.interpolate({\n      inputRange: [0, 50, 100],\n      outputRange: [0, -20, -100],\n    });\n\n    const onPressDelete = () => {\n      handleDeleteItem(item.id);\n    };\n\n    return (\n\n      <View style={styles.deleteContainer}>\n        <TouchableOpacity style={styles.deleteButton} onPress={onPressDelete}>\n          <Text style={styles.deleteText}>Delete</Text>\n        </TouchableOpacity>\n      </View>\n\n    );\n  };\n\n  const renderLeftActions = (progress, dragX, item) => {\n    const trans = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1, 0],\n    });\n\n    const onPressUpdate = () => {\n      setEditingItemId(item.id);\n    };\n\n    return (\n\n      <View style={styles.updateContainer}>\n        <TouchableOpacity style={styles.updateButton} onPress={onPressUpdate}>\n          <Text style={styles.updateText}>Edit</Text>\n        </TouchableOpacity>\n      </View>\n\n    );\n  };\n\n  const renderItem = useMemo(() => ({ item }) => {\n    if (item.id === editingItemId) {\n      return (\n        <UpdateItemForm\n          itemId={item.id}\n          listItems={items} // Pass the items array here\n          onCancel={() => setEditingItemId(null)}\n          onSubmit={handleUpdateItem}\n        />\n      );\n    } else {\n      return (\n        <Swipeable\n          renderRightActions={(progress, dragX) => renderRightActions(progress, dragX, item)}\n          renderLeftActions={(progress, dragX) => renderLeftActions(progress, dragX, item)}\n        >\n          <View style={styles.item}>\n            <Text style={styles.itemName}>{item.name}</Text>\n            <Pressable\n              style={({ pressed }) => [\n                {\n                  backgroundColor: pressed ? '#8BC34A' : '#00cc66',\n                },\n                styles.button,\n              ]}\n              onPress={() => {\n                navigation.navigate('Product Detail', { item });\n              }}\n            >\n              <Text style={styles.buttonText}>Add Entry</Text>\n            </Pressable>\n          </View>\n        </Swipeable>\n      );\n    }\n  }, [editingItemId]);\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        keyExtractor={(item) => item.id}\n        data={items}\n        renderItem={renderItem}\n        extraData={items}\n        ListEmptyComponent={<Text style={styles.emptyList}>No items added yet</Text>}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFF0',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  item: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 10,\n    borderBottomWidth: 2,\n    borderBottomColor: 'black',\n    minHeight: 40\n  },\n  itemName: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: 'black',\n    marginLeft: 10,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  emptyList: {\n    fontSize: 20,\n    alignSelf: 'center',\n    marginTop: 50,\n  },\n  deleteContainer: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 80,\n    height: '100%',\n  },\n  deleteButton: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 80,\n    height: '100%',\n  },\n  deleteText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  updateButton: {\n    backgroundColor: 'blue',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 80,\n    height: '100%',\n  },\n  updateText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  updateContainer: {\n    backgroundColor: 'blue',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 80,\n    height: '100%',\n  },\n});\n\nexport default ItemsList;\n","import React, { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, View, TouchableOpacity, Text, Pressable } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport AddItemForm from '../components/AddItemForm';\nimport ItemsList from '../components/ItemsList';\nimport { addItem } from '../actions/AddItem';\nimport { updateItem } from '../actions/UpdateItem';\nimport { deleteItem } from '../actions/DeleteItem';\nimport { Ionicons } from '@expo/vector-icons';\nimport { logEvent } from '@firebase/analytics';\n\nconst AddItemScreen = () => {\n    logEvent;\n\n    const dispatch = useDispatch();\n    const navigation = useNavigation();\n\n    const [shouldShowForm, setShouldShowForm] = useState(true);\n\n    const handleAddItem = (item) => {\n        dispatch(addItem(item));\n    };\n\n    const handleUpdateItem = (id, name) => {\n        dispatch(updateItem(id, name));\n    };\n\n    const handleDeleteItem = (id) => {\n        dispatch(deleteItem(id));\n    };\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity\n                style={({ pressed }) => [{ backgroundColor: pressed ? '#fff' : 'transparent', borderRadius: 20, padding: 16, width: '85%', marginTop: 10, alignSelf: 'flex-start' }]}\n                onPress={() => navigation.goBack()}\n            >\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    <Ionicons name=\"chevron-back\" size={24} color='#fff' />\n                    <Text style={{ color: '#fff', fontWeight: 'bold', fontSize: 18 }}>\n                        Back\n                    </Text>\n                </View>\n            </TouchableOpacity>\n            {shouldShowForm && (\n                <View style={styles.formContainer}>\n                    <AddItemForm onAddItem={handleAddItem} />\n                </View>\n            )}\n            <View style={styles.listContainer}>\n                <ItemsList onUpdateItem={handleUpdateItem} onDeleteItem={handleDeleteItem} />\n            </View>\n            <Pressable\n                style={({ pressed }) => [{ backgroundColor: pressed ? '#0D47A1' : '#0A3D6E', borderRadius: 20, padding: 16, width: '85%', alignItems: 'center', marginTop: 10, }]}\n                onPress={() => setShouldShowForm(!shouldShowForm)}\n            >\n                <Text style={{ color: 'white', fontWeight: 'bold', fontSize: 18 }}>{shouldShowForm ? 'Hide Form' : 'Show Form'}</Text>\n            </Pressable>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#778899',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 10,\n    },\n    formContainer: {\n        backgroundColor: 'white',\n        borderColor: 'black',\n        borderWidth: 2,\n        padding: 10,\n        borderRadius: 10,\n        marginBottom: 20,\n        width: '90%',\n    },\n    listContainer: {\n        flex: 1,\n        backgroundColor: 'white',\n        alignSelf: 'stretch',\n    },\n});\n\nexport default AddItemScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, View, Text, ScrollView, TouchableOpacity } from 'react-native';\nimport { LineChart } from 'react-native-chart-kit';\nimport { ScreenWidth } from 'react-native-elements/dist/helpers';\nimport { Ionicons } from '@expo/vector-icons';\nimport { collectionGroup, where, getDocs, query } from 'firebase/firestore';\nimport moment from 'moment';\nimport { db } from '../firebaseConfig';\nimport { getAuth } from 'firebase/auth';\nimport { logEvent } from '@firebase/analytics';\n\n\nconst LineChartScreen = ({ route }) => {\n\n    logEvent;\n    const { itemId, itemName } = route.params;\n    const navigation = useNavigation();\n    const [weeklyEntries, setWeeklyEntries] = useState([]);\n    const [monthlyEntries, setMonthlyEntries] = useState([]);\n    const [yearlyEntries, setYearlyEntries] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n\n    useEffect(() => {\n        const fetchEntries = async () => {\n            try {\n                const entriesQuery = query(\n                    collectionGroup(db, 'entries'),\n                    where('uid', '==', currentUser.uid),\n                    where('itemId', '==', itemId)\n                );\n                const entriesSnapshot = await getDocs(entriesQuery);\n                const entries = entriesSnapshot.docs.map((doc) => doc.data());\n                console.log('All Entries:', entries);\n                const weekly = entries.slice(-7);\n                const monthly = entries.slice(-30);\n                const yearly = entries.slice(-270);\n                console.log('Weekly Entries:', weekly);\n                console.log('Monthly Entries:', monthly);\n                console.log('Yearly Entries:', yearly);\n                setWeeklyEntries(weekly);\n                setMonthlyEntries(monthly);\n                setYearlyEntries(yearly);\n                setLoading(false);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchEntries();\n    }, []);\n\n    if (loading) {\n        return (\n            <View style={styles.container}>\n                <Text style={styles.title}>Loading.....</Text>\n            </View>\n        );\n    }\n\n\n    if (!Array.isArray(weeklyEntries) || weeklyEntries.length === 0) {\n        return (\n            <View style={styles.container}>\n                <TouchableOpacity\n                    style={({ pressed }) => [{ backgroundColor: pressed ? 'black' : 'darkSlateGray', borderRadius: 20, padding: 16, width: '85%', marginTop: 20, alignSelf: 'center' }]}\n                    onPress={() => navigation.goBack()}\n                >\n                    <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                        <Ionicons name=\"chevron-back\" size={28} color='black' />\n                        <Text style={{ color: 'black', fontWeight: 'bold', fontSize: 24 }}>\n                            Back\n                        </Text>\n                    </View>\n                </TouchableOpacity>\n                <Text style={styles.title}>No data to display.</Text>\n            </View>\n        );\n    }\n    if (!Array.isArray(monthlyEntries) || monthlyEntries.length === 0) {\n        return (\n            <View style={styles.container}>\n                <Text style={styles.title}>No data to display.</Text>\n            </View>\n        );\n    }\n    if (!Array.isArray(yearlyEntries) || yearlyEntries.length === 0) {\n        return (\n            <View style={styles.container}>\n                <Text style={styles.title}>No data to display.</Text>\n            </View>\n        );\n    }\n\n    const weeklyData = {\n        labels: weeklyEntries.map(entry => moment(entry.date.toDate()).format('MM/DD')).reverse(),\n        datasets: [\n            {\n                data: weeklyEntries.map(entry => Number(entry.quantity)).reverse(),\n                color: () => `rgba(204, 127, 44, 1)`,\n                strokeWidth: 2,\n            },\n        ],\n    };\n\n    const monthlyData = {\n        labels: monthlyEntries.map(entry => moment(entry.date.toDate()).format('MM/DD')).reverse(),\n        datasets: [\n            {\n                data: monthlyEntries.map(entry => Number(entry.quantity)).reverse(),\n                color: () => `rgba(204, 127, 44, 1)`,\n                strokeWidth: 2,\n            },\n        ],\n    };\n\n    const yearlyData = {\n        labels: yearlyEntries.map(entry => moment(entry.date.toDate()).format('MM/DD')).reverse(),\n        datasets: [\n            {\n                data: yearlyEntries.map(entry => Number(entry.quantity)).reverse(),\n                color: () => `rgba(204, 127, 44, 1)`,\n                strokeWidth: 2,\n            },\n        ],\n    };\n\n    return (\n        <ScrollView contentContainerstyle={styles.scroll}>\n            <ScrollView style={styles.scrollContent}>\n                <TouchableOpacity\n                    style={({ pressed }) => [{ backgroundColor: pressed ? '#fff' : 'transparent', borderRadius: 20, padding: 16, width: '85%', marginTop: 10, alignSelf: 'flex-start' }]}\n                    onPress={() => navigation.goBack()}\n                >\n                    <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                        <Ionicons name=\"chevron-back\" size={24} color='#fff' />\n                        <Text style={{ color: '#fff', fontWeight: 'bold', fontSize: 18 }}>\n                            Back\n                        </Text>\n                    </View>\n                </TouchableOpacity>\n                <Text style={styles.title}>{itemName}</Text>\n                <Text style={{\n                    fontSize: 24,\n                    fontWeight: 'bold',\n                    textAlign: 'center',\n                    color: '#333333'\n                }}>Weekly</Text>\n                <LineChart\n                    data={weeklyData}\n                    width={ScreenWidth}\n                    height={275}\n                    chartConfig={{\n                        backgroundColor: '#f8f8f8',\n                        backgroundGradientFrom: '#f8f8f8',\n                        backgroundGradientTo: '#dcdcdc',\n                        decimalPlaces: 0,\n                        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                        yAxisLabel: 'Quantity',\n                        xAxisLabel: 'Date',\n                    }}\n                    bezier\n                    style={{\n                        marginVertical: 8,\n                        borderRadius: 16,\n                    }}\n                    withInnerLines={true}\n                    withOuterLines={false}\n                    fromZero={true}\n                    contentInset={{ top: 20, bottom: 20 }}\n                    withVerticalLabels={true}\n                    withHorizontalLabels={true}\n                />\n                <Text style={styles.id}>ID: {itemId}</Text>\n                <Text style={{\n                    fontSize: 24,\n                    fontWeight: 'bold',\n                    textAlign: 'center',\n                    color: '#333333'\n                }}>Monthly</Text>\n                <LineChart\n                    data={monthlyData}\n                    width={ScreenWidth}\n                    height={275}\n                    chartConfig={{\n                        backgroundColor: '#f8f8f8',\n                        backgroundGradientFrom: '#f8f8f8',\n                        backgroundGradientTo: '#dcdcdc',\n                        decimalPlaces: 0,\n                        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                        yAxisLabel: 'Quantity',\n                        xAxisLabel: 'Date',\n                    }}\n                    bezier\n                    style={{\n                        marginVertical: 8,\n                        borderRadius: 16,\n                    }}\n                    withInnerLines={true}\n                    withOuterLines={true}\n                    fromZero={true}\n                    contentInset={{ top: 20, bottom: 20 }}\n                    withVerticalLabels={true}\n                    withHorizontalLabels={true}\n                />\n                <Text style={styles.id}>ID: {itemId}</Text>\n                <Text style={{\n                    fontSize: 24,\n                    fontWeight: 'bold',\n                    textAlign: 'center',\n                    color: '#333333'\n                }}>Yearly</Text>\n                <LineChart\n                    data={yearlyData}\n                    width={ScreenWidth}\n                    height={275}\n                    chartConfig={{\n                        backgroundColor: '#f8f8f8',\n                        backgroundGradientFrom: '#f8f8f8',\n                        backgroundGradientTo: '#dcdcdc',\n                        decimalPlaces: 0,\n                        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                        yAxisLabel: 'Quantity',\n                        xAxisLabel: 'Date',\n                    }}\n                    bezier\n                    style={{\n                        marginVertical: 8,\n                        borderRadius: 16,\n                    }}\n                    withInnerLines={true}\n                    withOuterLines={true}\n                    fromZero={true}\n                    contentInset={{ top: 20, bottom: 20 }}\n                    withVerticalLabels={true}\n                    withHorizontalLabels={true}\n                />\n                <Text style={styles.id}>ID: {itemId}</Text>\n            </ScrollView>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    scroll: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n    scrollContent: {\n        backgroundColor: '#778899',\n        padding: 1,\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        color: 'black'\n    },\n    id: {\n        color: '#dcdcdc',\n        textAlign: 'right'\n    },\n});\n\nexport default LineChartScreen;\n","import React from 'react';\nimport { Pressable, View, Text } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from './HomeScreen';\nimport AboutScreen from './AboutScreen';\nimport LoginScreen from './LoginScreen';\nimport ItemDetailScreen from './ItemDetailScreen';\nimport AddItemScreen from './AddItemScreen';\nimport LineChartScreen from './LineChartScreen';\nimport { Image } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { getAuth, signOut } from \"firebase/auth\";\n\n\nconst screenOptions = ({ navigation }) => ({\n    headerTintColor: '#fff',\n    headerStyle: { backgroundColor: 'darkslategray' },\n    headerTitleAlign: 'center',\n    headerTitleStyle: {\n        fontWeight: 'bold',\n        fontSize: 28,\n    },\n    headerRight: () => (\n        <Image\n            source={require('../assets/img/block.jpg')}\n            style={{ width: 30, height: 30, marginLeft: 10 }}\n        />\n    ),\n    headerLeft: () => (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Pressable\n                onPress={() => {\n                    const auth = getAuth();\n                    signOut(auth)\n                        .then(() => {\n                            console.log('User signed out successfully');\n                            navigation.navigate('Login');\n                        })\n                        .catch((error) => {\n                            console.log('Error signing out: ', error);\n                        });\n                }}\n                style={{ marginLeft: 2, marginRight: 5 }}\n            >\n                <Text style={{ color: 'red', fontSize: 12, fontWeight: 'bold' }}>\n                    <Ionicons\n                        name=\"exit-outline\"\n                        size={20}\n                        color=\"red\"\n                    /> Logout\n                </Text>\n            </Pressable>\n        </View>\n    ),\n});\n\n\nconst LoginNavigator = () => {\n    const Stack = createStackNavigator();\n    return (\n        <Stack.Navigator screenOptions={screenOptions}>\n            <Stack.Screen\n                name='Login'\n                component={LoginScreen}\n                options={({ route }) => ({\n                    title: route.name\n                })}\n\n            />\n        </Stack.Navigator>\n    );\n};\n\nconst AddItemNavigator = () => {\n    const Stack = createStackNavigator();\n    return (\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen name='Add Product'\n                component={AddItemScreen}\n                options={{ title: \"ProTracker\" }}\n            />\n            <Stack.Screen name='Product Detail'\n                component={ItemDetailScreen}\n                options={({ route, }) => ({\n                    headerTitle: getFocusedRouteNameFromRoute(route) || 'Add Product'\n                })}\n            />\n            <Stack.Screen name=\"LineChart\"\n                component={LineChartScreen}\n                options={({ route }) => ({\n                    headerTitle: getFocusedRouteNameFromRoute(route) || 'Charts'\n                })}\n            />\n        </Stack.Navigator>\n    );\n};\n\n\nconst HomeNavigator = () => {\n    const Stack = createStackNavigator();\n    return (\n        <Stack.Navigator screenOptions={screenOptions}>\n            <Stack.Screen\n                name='Home'\n                component={HomeScreen}\n                options={{ title: \"ProTracker\" }}\n            />\n            <Stack.Screen\n                name='AddItemStack'\n                component={AddItemNavigator}\n                options={({ route }) => ({\n                    headerTitle: getFocusedRouteNameFromRoute(route) || 'Products'\n                })}\n            />\n        </Stack.Navigator>\n    );\n}\n\nconst AboutNavigator = () => {\n    const Stack = createStackNavigator();\n    return (\n        <Stack.Navigator\n            initialRouteName='Contact'\n            screenOptions={screenOptions}\n            options={{ title: \"ProTracker\" }}\n        >\n            <Stack.Screen\n                name='Contact'\n                component={AboutScreen}\n                options={({ route }) => ({\n                    headerTitle: getFocusedRouteNameFromRoute(route) || 'support'\n                })}\n            />\n        </Stack.Navigator>\n    );\n};\n\nconst Main = () => {\n    const Stack = createStackNavigator();\n    return (\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen name='Home' component={HomeNavigator} />\n            <Stack.Screen name='AddItem' component={AddItemNavigator} />\n            <Stack.Screen name='Contact' component={AboutNavigator} />\n        </Stack.Navigator>\n    );\n};\n\n\nexport default Main;","import { ADD_ITEM, DELETE_ITEM, UPDATE_ITEM, ADD_ENTRY, DELETE_ENTRY, EDIT_ENTRY } from '../actions/types';\n\nconst initialState = [];\n\nconst itemsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ITEM:\n            console.log('ADD_ITEM:', action.payload);\n            return [...state, action.payload];\n        case DELETE_ITEM:\n            console.log('DELETE_ITEM:', action.payload);\n            return state.filter((item) => item.id !== action.payload.id);\n        case UPDATE_ITEM:\n            console.log('UPDATE_ITEM:', action.payload);\n            return state.map((item) =>\n                item.id === action.payload.id ? { ...item, ...action.payload } : item\n            );\n        case ADD_ENTRY:\n            console.log('ADD_ENTRY:', action.payload)\n            const { itemId, quantity, date } = action.payload;\n            const item = state.find((item) => item.id === itemId);\n            if (item) {\n                item.entries.push({ id: entryId, quantity, date });\n            }\n            return [...state];\n        case DELETE_ENTRY:\n            console.log('DELETE_ENTRY:', action.payload)\n            const { itemId: deleteItemId, entryId } = action.payload;\n            const deleteItem = state.find((item) => item.id === deleteItemId);\n            if (deleteItem) {\n                deleteItem.entries = deleteItem.entries.filter((entry) => entry.id !== entryId);\n            }\n            return [...state];\n        case EDIT_ENTRY:\n            console.log('EDIT_ENTRY:', action.payload)\n            const { itemId: editItemId, entryId: editEntryId, quantity: editQuantity } = action.payload;\n            const editItem = state.find((item) => item.id === editItemId);\n            if (editItem) {\n                const editEntry = editItem.entries.find((entry) => entry.id === editEntryId);\n                if (editEntry) {\n                    editEntry.quantity = editQuantity;\n                }\n            }\n            return [...state];\n\n        default:\n            return state;\n    }\n};\n\nexport default itemsReducer;\n","import { combineReducers } from 'redux';\nimport itemsReducer from './items';\n\nconst rootReducer = combineReducers({\n    items: itemsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { db } from './firebaseConfig';\n\nconst middleware = [thunk.withExtraArgument({ db })];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport default store;\n","import { useState, useEffect, Suspense } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport 'react-native-get-random-values';\nimport { Provider } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport SplashScreen from './components/SplashScreen';\nimport Main from './screens/MainComponent';\nimport LoginScreen from './screens/LoginScreen';\nimport store from './store';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst stack = createStackNavigator();\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return <SplashScreen />;\n  }\n\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Suspense fallback={<ActivityIndicator />}>\n          <stack.Navigator initialRouteName=\"Login\">\n            <stack.Screen name=\"Login\" component={LoginScreen} />\n            <stack.Screen name=\"Main\" component={Main} />\n          </stack.Navigator>\n        </Suspense>\n      </NavigationContainer>\n    </Provider>\n  );\n};\n\nexport default App;\n","var map = {\n\t\"./af\": 315,\n\t\"./af.js\": 315,\n\t\"./ar\": 316,\n\t\"./ar-dz\": 317,\n\t\"./ar-dz.js\": 317,\n\t\"./ar-kw\": 318,\n\t\"./ar-kw.js\": 318,\n\t\"./ar-ly\": 319,\n\t\"./ar-ly.js\": 319,\n\t\"./ar-ma\": 320,\n\t\"./ar-ma.js\": 320,\n\t\"./ar-sa\": 321,\n\t\"./ar-sa.js\": 321,\n\t\"./ar-tn\": 322,\n\t\"./ar-tn.js\": 322,\n\t\"./ar.js\": 316,\n\t\"./az\": 323,\n\t\"./az.js\": 323,\n\t\"./be\": 324,\n\t\"./be.js\": 324,\n\t\"./bg\": 325,\n\t\"./bg.js\": 325,\n\t\"./bm\": 326,\n\t\"./bm.js\": 326,\n\t\"./bn\": 327,\n\t\"./bn-bd\": 328,\n\t\"./bn-bd.js\": 328,\n\t\"./bn.js\": 327,\n\t\"./bo\": 329,\n\t\"./bo.js\": 329,\n\t\"./br\": 330,\n\t\"./br.js\": 330,\n\t\"./bs\": 331,\n\t\"./bs.js\": 331,\n\t\"./ca\": 332,\n\t\"./ca.js\": 332,\n\t\"./cs\": 333,\n\t\"./cs.js\": 333,\n\t\"./cv\": 334,\n\t\"./cv.js\": 334,\n\t\"./cy\": 335,\n\t\"./cy.js\": 335,\n\t\"./da\": 336,\n\t\"./da.js\": 336,\n\t\"./de\": 337,\n\t\"./de-at\": 338,\n\t\"./de-at.js\": 338,\n\t\"./de-ch\": 339,\n\t\"./de-ch.js\": 339,\n\t\"./de.js\": 337,\n\t\"./dv\": 340,\n\t\"./dv.js\": 340,\n\t\"./el\": 341,\n\t\"./el.js\": 341,\n\t\"./en-au\": 342,\n\t\"./en-au.js\": 342,\n\t\"./en-ca\": 343,\n\t\"./en-ca.js\": 343,\n\t\"./en-gb\": 344,\n\t\"./en-gb.js\": 344,\n\t\"./en-ie\": 345,\n\t\"./en-ie.js\": 345,\n\t\"./en-il\": 346,\n\t\"./en-il.js\": 346,\n\t\"./en-in\": 347,\n\t\"./en-in.js\": 347,\n\t\"./en-nz\": 348,\n\t\"./en-nz.js\": 348,\n\t\"./en-sg\": 349,\n\t\"./en-sg.js\": 349,\n\t\"./eo\": 350,\n\t\"./eo.js\": 350,\n\t\"./es\": 351,\n\t\"./es-do\": 352,\n\t\"./es-do.js\": 352,\n\t\"./es-mx\": 353,\n\t\"./es-mx.js\": 353,\n\t\"./es-us\": 354,\n\t\"./es-us.js\": 354,\n\t\"./es.js\": 351,\n\t\"./et\": 355,\n\t\"./et.js\": 355,\n\t\"./eu\": 356,\n\t\"./eu.js\": 356,\n\t\"./fa\": 357,\n\t\"./fa.js\": 357,\n\t\"./fi\": 358,\n\t\"./fi.js\": 358,\n\t\"./fil\": 359,\n\t\"./fil.js\": 359,\n\t\"./fo\": 360,\n\t\"./fo.js\": 360,\n\t\"./fr\": 361,\n\t\"./fr-ca\": 362,\n\t\"./fr-ca.js\": 362,\n\t\"./fr-ch\": 363,\n\t\"./fr-ch.js\": 363,\n\t\"./fr.js\": 361,\n\t\"./fy\": 364,\n\t\"./fy.js\": 364,\n\t\"./ga\": 365,\n\t\"./ga.js\": 365,\n\t\"./gd\": 366,\n\t\"./gd.js\": 366,\n\t\"./gl\": 367,\n\t\"./gl.js\": 367,\n\t\"./gom-deva\": 368,\n\t\"./gom-deva.js\": 368,\n\t\"./gom-latn\": 369,\n\t\"./gom-latn.js\": 369,\n\t\"./gu\": 370,\n\t\"./gu.js\": 370,\n\t\"./he\": 371,\n\t\"./he.js\": 371,\n\t\"./hi\": 372,\n\t\"./hi.js\": 372,\n\t\"./hr\": 373,\n\t\"./hr.js\": 373,\n\t\"./hu\": 374,\n\t\"./hu.js\": 374,\n\t\"./hy-am\": 375,\n\t\"./hy-am.js\": 375,\n\t\"./id\": 376,\n\t\"./id.js\": 376,\n\t\"./is\": 377,\n\t\"./is.js\": 377,\n\t\"./it\": 378,\n\t\"./it-ch\": 379,\n\t\"./it-ch.js\": 379,\n\t\"./it.js\": 378,\n\t\"./ja\": 380,\n\t\"./ja.js\": 380,\n\t\"./jv\": 381,\n\t\"./jv.js\": 381,\n\t\"./ka\": 382,\n\t\"./ka.js\": 382,\n\t\"./kk\": 383,\n\t\"./kk.js\": 383,\n\t\"./km\": 384,\n\t\"./km.js\": 384,\n\t\"./kn\": 385,\n\t\"./kn.js\": 385,\n\t\"./ko\": 386,\n\t\"./ko.js\": 386,\n\t\"./ku\": 387,\n\t\"./ku.js\": 387,\n\t\"./ky\": 388,\n\t\"./ky.js\": 388,\n\t\"./lb\": 389,\n\t\"./lb.js\": 389,\n\t\"./lo\": 390,\n\t\"./lo.js\": 390,\n\t\"./lt\": 391,\n\t\"./lt.js\": 391,\n\t\"./lv\": 392,\n\t\"./lv.js\": 392,\n\t\"./me\": 393,\n\t\"./me.js\": 393,\n\t\"./mi\": 394,\n\t\"./mi.js\": 394,\n\t\"./mk\": 395,\n\t\"./mk.js\": 395,\n\t\"./ml\": 396,\n\t\"./ml.js\": 396,\n\t\"./mn\": 397,\n\t\"./mn.js\": 397,\n\t\"./mr\": 398,\n\t\"./mr.js\": 398,\n\t\"./ms\": 399,\n\t\"./ms-my\": 400,\n\t\"./ms-my.js\": 400,\n\t\"./ms.js\": 399,\n\t\"./mt\": 401,\n\t\"./mt.js\": 401,\n\t\"./my\": 402,\n\t\"./my.js\": 402,\n\t\"./nb\": 403,\n\t\"./nb.js\": 403,\n\t\"./ne\": 404,\n\t\"./ne.js\": 404,\n\t\"./nl\": 405,\n\t\"./nl-be\": 406,\n\t\"./nl-be.js\": 406,\n\t\"./nl.js\": 405,\n\t\"./nn\": 407,\n\t\"./nn.js\": 407,\n\t\"./oc-lnc\": 408,\n\t\"./oc-lnc.js\": 408,\n\t\"./pa-in\": 409,\n\t\"./pa-in.js\": 409,\n\t\"./pl\": 410,\n\t\"./pl.js\": 410,\n\t\"./pt\": 411,\n\t\"./pt-br\": 412,\n\t\"./pt-br.js\": 412,\n\t\"./pt.js\": 411,\n\t\"./ro\": 413,\n\t\"./ro.js\": 413,\n\t\"./ru\": 414,\n\t\"./ru.js\": 414,\n\t\"./sd\": 415,\n\t\"./sd.js\": 415,\n\t\"./se\": 416,\n\t\"./se.js\": 416,\n\t\"./si\": 417,\n\t\"./si.js\": 417,\n\t\"./sk\": 418,\n\t\"./sk.js\": 418,\n\t\"./sl\": 419,\n\t\"./sl.js\": 419,\n\t\"./sq\": 420,\n\t\"./sq.js\": 420,\n\t\"./sr\": 421,\n\t\"./sr-cyrl\": 422,\n\t\"./sr-cyrl.js\": 422,\n\t\"./sr.js\": 421,\n\t\"./ss\": 423,\n\t\"./ss.js\": 423,\n\t\"./sv\": 424,\n\t\"./sv.js\": 424,\n\t\"./sw\": 425,\n\t\"./sw.js\": 425,\n\t\"./ta\": 426,\n\t\"./ta.js\": 426,\n\t\"./te\": 427,\n\t\"./te.js\": 427,\n\t\"./tet\": 428,\n\t\"./tet.js\": 428,\n\t\"./tg\": 429,\n\t\"./tg.js\": 429,\n\t\"./th\": 430,\n\t\"./th.js\": 430,\n\t\"./tk\": 431,\n\t\"./tk.js\": 431,\n\t\"./tl-ph\": 432,\n\t\"./tl-ph.js\": 432,\n\t\"./tlh\": 433,\n\t\"./tlh.js\": 433,\n\t\"./tr\": 434,\n\t\"./tr.js\": 434,\n\t\"./tzl\": 435,\n\t\"./tzl.js\": 435,\n\t\"./tzm\": 436,\n\t\"./tzm-latn\": 437,\n\t\"./tzm-latn.js\": 437,\n\t\"./tzm.js\": 436,\n\t\"./ug-cn\": 438,\n\t\"./ug-cn.js\": 438,\n\t\"./uk\": 439,\n\t\"./uk.js\": 439,\n\t\"./ur\": 440,\n\t\"./ur.js\": 440,\n\t\"./uz\": 441,\n\t\"./uz-latn\": 442,\n\t\"./uz-latn.js\": 442,\n\t\"./uz.js\": 441,\n\t\"./vi\": 443,\n\t\"./vi.js\": 443,\n\t\"./x-pseudo\": 444,\n\t\"./x-pseudo.js\": 444,\n\t\"./yo\": 445,\n\t\"./yo.js\": 445,\n\t\"./zh-cn\": 446,\n\t\"./zh-cn.js\": 446,\n\t\"./zh-hk\": 447,\n\t\"./zh-hk.js\": 447,\n\t\"./zh-mo\": 448,\n\t\"./zh-mo.js\": 448,\n\t\"./zh-tw\": 449,\n\t\"./zh-tw.js\": 449\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 653;","module.exports = __webpack_public_path__ + \"static/media/chart.aced667c.png\";"],"sourceRoot":""}